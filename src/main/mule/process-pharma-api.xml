<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:slack="http://www.mulesoft.org/schema/mule/slack" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd  http://www.mulesoft.org/schema/mule/slack http://www.mulesoft.org/schema/mule/slack/current/mule-slack.xsd http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
    <http:listener-config name="process-pharma-api-httpListenerConfig">
        <http:listener-connection host="${http.listener.host}" port="${http.listener.port}" protocol="HTTPS" tlsContext="TLS_Context" readTimeout="${http.listener.read.timeout}" />
    </http:listener-config>
    <apikit:config name="process-pharma-api-config" api="resource::ab8117f6-d718-4307-b5f7-03262d589cd0:process-pharma-api:1.0.33:raml:zip:process-pharma-api.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <flow name="process-pharma-api-main">
        <http:listener config-ref="process-pharma-api-httpListenerConfig" path="${http.listener.path}">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body><![CDATA[#[payload]]]></http:body>
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="process-pharma-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "APIKIT-400",
			"user_error_description": "The server cannot or will not process the request due to something that is perceived to be a client error",
			"system_error_description": "Bad Request"
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[400]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "APIKIT-404",
			"user_error_description": "The origin server did not find a current representation for the target resource or is not willing to disclose that one exists",
			"system_error_description": "Not Found"
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[404]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "APIKIT-405",
			"user_error_description": "The method received in the request-line is known by the origin server but not supported by the target resource",
			"system_error_description": "Method Not Allowed"
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[405]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "APIKIT-406",
			"user_error_description": "The target resource does not have a current representation that would be acceptable to the user agent, according to the proactive negotiation header fields received in the request1, and the server is unwilling to supply a default representation",
			"system_error_description": "Not Acceptable"
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[406]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "APIKIT-415",
			"user_error_description": "The origin server is refusing to service the request because the payload is in a format not supported by this method on the target resource",
			"system_error_description": "Unsupported Media Type"
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[415]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
	
		"completed_succesfully": "false",
		"error": {
			"error_type": "APIKIT-501",
			"user_error_description": "The server does not support the functionality required to fulfill the request",
			"system_error_description": "Not Implemented"
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[501]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="81b7b511-0687-4746-bb83-3132741084e1" type="HTTP:BAD_REQUEST">
                <ee:transform doc:name="Transform Message" doc:id="312352cd-9ea8-4de2-acc8-cdec6314bdff">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
	
		"completed_succesfully": "false",
		"error": {
			"error_type": error.errorType.namespace ++ ": " ++ error.errorType.asString,
			"user_error_description": error.description,
			"system_error_description": error.errorMessage.payload.traxion_response.error
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[400]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="451c3de1-7508-48d6-8d04-adb82e483881" type="ERROR:TMS">
                <ee:transform doc:name="Transform Message" doc:id="ea22c37c-88f9-4708-879b-bdc84f734526">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "TMS:ERROR",
			"reference": vars.req_tms_by.no_reposicion,
			"order": vars.req_tms_by.no_viaje_unigis, 
			"user_error_description": error.description,
			"system_error_description": error.muleMessage.typedValue.traxion_response.error.user_error_description default error.description
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[400]]></ee:set-variable>
                        <ee:set-variable variableName="channel"><![CDATA[%dw 2.0
output application/json
---
p('slack.connection.channel.imss')]]></ee:set-variable>
                        <ee:set-variable variableName="service_provider"><![CDATA[%dw 2.0
output application/json
---
"ERROR PROVENIENTE DE TMS BLUEYONDER CREACION DE ORDEN"]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
                <!-- [STUDIO:"Logger"]<logger level="INFO" doc:name="Logger" doc:id="af1cec0b-b4c8-48fe-a0c2-94cc43b9487f" /> [STUDIO] -->
                <flow-ref doc:name="orchestrator-send-message-to-slack-main" doc:id="3f1241d5-f41c-44ca-a248-9ccd5ffe3c84" name="orchestrator-send-message-to-slack-main" />
            </on-error-propagate>
            <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="84626715-47fc-4661-9954-7bcdd66a5a0c" type="ERROR:UNIGIS_EMPTY_FIELDS">
                <ee:transform doc:name="Transform Message" doc:id="9e67031e-d21f-459e-b78f-66a82f13fdb8">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
///error.muleMessage.typedValue
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "ERROR:UNIGIS_EMPTY_FIELDS",
			"reference": payload.referencia,
			"client": payload.refCliente, 
			"user_error_description": error.description,
			"system_error_description": error.message
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[400]]></ee:set-variable>
                        <ee:set-variable variableName="channel"><![CDATA[%dw 2.0
output application/json
---
p('slack.connection.channel.imss')]]></ee:set-variable>
                        <ee:set-variable variableName="service_provider"><![CDATA[%dw 2.0
output application/json
---
"ERROR PROVENIENTE DE UNIGIS CREACION DE ORDEN"]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
                <flow-ref doc:name="orchestrator-send-message-to-slack-main" doc:id="8a791c0d-1ca6-4f89-a520-0e29e9f98207" name="orchestrator-send-message-to-slack-main" />
            </on-error-propagate>
            <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="bd1dbf95-3225-4b5e-8b42-8217e925fabd" type="ERROR:UNIGIS">
                <ee:transform doc:name="Transform Message" doc:id="c96dd0b5-0840-4706-a039-ed122c6b5750">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "UNIGIS:ERROR",
			"reference": payload.referencia,
			"client": payload.refCliente, 
			"user_error_description": error.description,
			"system_error_description": error.description
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[400]]></ee:set-variable>
                        <ee:set-variable variableName="channel"><![CDATA[%dw 2.0
output application/json
---
p('slack.connection.channel.imss')]]></ee:set-variable>
                        <ee:set-variable variableName="service_provider"><![CDATA[%dw 2.0
output application/json
---
"ERROR PROVENIENTE DE UNIGIS CREACION DE ORDEN"]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
                <flow-ref doc:name="orchestrator-send-message-to-slack-main" doc:id="cd4ad2c1-6922-4f13-b4f3-90e8cf62fe37" name="orchestrator-send-message-to-slack-main" />
            </on-error-propagate>
            <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="b172b86d-6c33-4e04-b4a9-50a1959ccbbc" type="CARTAPORTE:BAD_REQUEST">
                <ee:transform doc:name="Transform Message" doc:id="63984202-0b61-4622-814c-c4631071208c">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "CARTA_PORTE:BAD_REQUEST",
			"user_error_description": error.description,
			"system_error_description": error.description
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[400]]></ee:set-variable>
                        <ee:set-variable variableName="channel"><![CDATA[%dw 2.0
output application/json
---
p('slack.connection.channel')]]></ee:set-variable>
                        <ee:set-variable variableName="service_provider"><![CDATA[%dw 2.0
output application/json
---
"ERROR PROVENIENTE DEL PACK DE CARTA PORTE"]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
                <flow-ref doc:name="orchestrator-send-message-to-slack-main" doc:id="dead0e83-0731-4e03-b134-eb479867745c" name="orchestrator-send-message-to-slack-main" />
            </on-error-propagate>
            <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="f307ae51-e879-4b60-a5f6-948d39c4680a" type="ERROR:CARTAPORTE">
                <ee:transform doc:name="Transform Message" doc:id="5b532ab3-825e-447f-a804-35427e3b05ed">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
ns ns2 http://ws.edifactwstraxion/
---
{
	"ERROR CARTA PORTE": vars.cpResponse.body.ns2#generaComprobanteResponse.return
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[400]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
                <logger level="INFO" doc:name="Logger" doc:id="7fc67520-6a0b-485b-9ed8-bd371f4ec2a3" message="#[payload]" />
                <ee:transform doc:name="Transform Message" doc:id="795bf9b2-8234-4a4f-ac2e-4667ab5f1645">
                    <ee:message />
                    <ee:variables>
                        <ee:set-variable variableName="sendToSlack"><![CDATA[%dw 2.0
output application/json
ns ns2 http://ws.edifactwstraxion/
---
write({
	"ERROR CARTA PORTE": vars.cpResponse.body.ns2#generaComprobanteResponse.return
})]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
                <try doc:name="Try" doc:id="773e428f-bc5e-4c8e-8100-c7b9d5dae39e">
                    <slack:create-chatpost-message doc:name="Send Message" doc:id="0ab58cc6-db23-4969-98ca-8546b7557ace" config-ref="Slack_Connector_Config">
                        <slack:chatpost-message-content><![CDATA[#[%dw 2.0
output application/json
---
{
	"channel": Mule::p('slack.connection.channel'),
	"text": "`Attention!` <!channel> There was an error in a mule app-> :warning: "
	++ "\n ---------------------------------------------------"
	++ "\n `ERROR PROVENIENTE DEL PACK DE CARTA PORTE`"
	++ "\n ---------------------------------------------------"
	++ "\n Fecha y hora ->" ++ now() as String
	++ "\n" ++ (vars.sendToSlack)
}]]]></slack:chatpost-message-content>
                    </slack:create-chatpost-message>
                    <error-handler>
                        <on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="9a9ee4d4-6e9d-4c95-b072-4af9e5aa500a">
                            <logger level="ERROR" doc:name="Logger" doc:id="61c00a1f-9640-4ad4-b0f9-107569e339c2" message="THIS SLACK ERROR DOES NOT AFFECT THE NORMAL PROCESS. ONLY THE MESSAGES DOES NOT ARRIVE TO SLACK. EVEN SO YOU HAVE TO REVIEW IT. #[error]" category="SLACK CONNECTIVITY." />
                        </on-error-continue>
                    </error-handler>
                </try>
            </on-error-propagate>
            <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="a4eda8ea-f815-4e81-a113-de218810db6f" type="ERROR:CARTAPORTECAMPORFC">
                <ee:transform doc:name="Transform Message" doc:id="32e2c0a7-e27f-442f-a38c-1bddb4e8efc4">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"ERROR CARTA PORTE": error.description
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[400]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
                <logger level="INFO" doc:name="Logger" doc:id="359315c5-4178-446d-a75e-1156da5ee7e4" message="#[payload]" />
                <ee:transform doc:name="Transform Message" doc:id="65d16329-714b-4869-804f-cd017ca2ccfc">
                    <ee:message />
                    <ee:variables>
                        <ee:set-variable variableName="sendToSlack"><![CDATA[%dw 2.0
output application/json
---
write({
	"ERROR CARTA PORTE": error.description as String
})]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
                <try doc:name="Try" doc:id="c0164c1e-e3e6-4f90-bfbc-73002c73bf14">
                    <slack:create-chatpost-message doc:name="Send Message" doc:id="e237af81-39d7-4b94-b266-9759f2ecbe9d" config-ref="Slack_Connector_Config">
                        <slack:chatpost-message-content><![CDATA[#[%dw 2.0
output application/json
---
{
	"channel": Mule::p('slack.connection.channel'),
	"text": "`Attention!` <!channel> There was an error in a mule app-> :warning: "
	++ "\n ---------------------------------------------------"
	++ "\n `ERROR PROVENIENTE DEL PACK DE CARTA PORTE`"
	++ "\n ---------------------------------------------------"
	++ "\n Fecha y hora ->" ++ now() as String
	++ "\n" ++ (vars.sendToSlack)
}]]]></slack:chatpost-message-content>
                    </slack:create-chatpost-message>
                    <error-handler>
                        <on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="827e4674-d0f2-4a09-bfe8-df50f8a343e4">
                            <logger level="ERROR" doc:name="Logger" doc:id="a3bb9e7d-dda2-442b-b8b7-427f2c64b15e" message="THIS SLACK ERROR DOES NOT AFFECT THE NORMAL PROCESS. ONLY THE MESSAGES DOES NOT ARRIVE TO SLACK. EVEN SO YOU HAVE TO REVIEW IT. #[error]" category="SLACK CONNECTIVITY." />
                        </on-error-continue>
                    </error-handler>
                </try>
            </on-error-propagate>
            <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="320c267e-a1e6-4997-bd9d-02c71ae77eab" type="ERROR:BADRFCCARTAPORTE">
                <ee:transform doc:name="Transform Message" doc:id="a998489a-d277-4a1b-b473-9749137757f1">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"ERROR CARTA PORTE": error.description
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[400]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
                <logger level="INFO" doc:name="Logger" doc:id="a3d9e687-293c-4e08-9617-ae2dad5ba8ff" message="#[payload]" />
                <ee:transform doc:name="Transform Message" doc:id="bf3f7ac8-3517-499f-bcfb-2660cb5c724a">
                    <ee:message />
                    <ee:variables>
                        <ee:set-variable variableName="sendToSlack"><![CDATA[%dw 2.0
output application/json
ns ns2 http://ws.edifactwstraxion/
---
write({
	"ERROR CARTA PORTE": {
		"description": error.description as String,
		"responsePack": vars.cpResponse.body.ns2#generaComprobanteResponse.return
}
})]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
                <try doc:name="Try" doc:id="1006e87e-e511-490b-92fc-bacbc686f9c7">
                    <slack:create-chatpost-message doc:name="Send Message" doc:id="5684d72f-149f-4072-b39d-917a18d7f6b0" config-ref="Slack_Connector_Config">
                        <slack:chatpost-message-content><![CDATA[#[%dw 2.0
output application/json
---
{
	"channel": Mule::p('slack.connection.channel'),
	"text": "`Attention!` <!channel> There was an error in a mule app-> :warning: "
	++ "\n ---------------------------------------------------"
	++ "\n `ERROR PROVENIENTE DEL PACK DE CARTA PORTE`"
	++ "\n ---------------------------------------------------"
	++ "\n Fecha y hora ->" ++ now() as String
	++ "\n" ++ (vars.sendToSlack)
}]]]></slack:chatpost-message-content>
                    </slack:create-chatpost-message>
                    <error-handler>
                        <on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="43ba7cba-ddb4-43ee-a4c0-61afcd641dca">
                            <logger level="ERROR" doc:name="Logger" doc:id="e4bed673-39ee-4176-af58-1306e1796ba2" message="THIS SLACK ERROR DOES NOT AFFECT THE NORMAL PROCESS. ONLY THE MESSAGES DOES NOT ARRIVE TO SLACK. EVEN SO YOU HAVE TO REVIEW IT. #[error]" category="SLACK CONNECTIVITY." />
                        </on-error-continue>
                    </error-handler>
                </try>
            </on-error-propagate>
            <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="173673eb-420a-4a97-824d-03c304011d5d" type="ERROR:CARTA_PORTE_SERVICE_UNAVAILABLE">
                <ee:transform doc:name="Transform Message" doc:id="8321b81c-995f-4098-acc9-fe8df240ae54">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
	
		"completed_succesfully": "false",
		"error": {
			"error_type": "HTTP:503_" ++ error.errorType.asString,
			"user_error_description": error.description,
			"system_error_description": error.dslSource
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[503]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
                <logger level="ERROR" doc:name="Logger" doc:id="e82dcc0d-74f2-49f1-add6-20ae67aecb72" message="#[payload]" />
                <ee:transform doc:name="Transform Message" doc:id="c8a428db-f347-40ab-94e1-a828257f283e">
                    <ee:message />
                    <ee:variables>
                        <ee:set-variable variableName="sendToSlack"><![CDATA[%dw 2.0
output application/json
---
write({
	"traxion_response": {
	
		"completed_succesfully": "false",
		"error": {
			"error_type": "HTTP:503_" ++ error.errorType.asString as String,
			"user_error_description": error.description as String,
			"system_error_description": error.dslSource as String
		}
	}
})]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
                <try doc:name="Try" doc:id="5fa28163-a748-4715-8ad8-47800e881b07">
                    <slack:create-chatpost-message doc:name="Send Message" doc:id="e43f47bc-d70c-474a-8ee8-ff496afc89ff" config-ref="Slack_Connector_Config">
                        <slack:chatpost-message-content><![CDATA[#[%dw 2.0
output application/json
---
{
	"channel": Mule::p('slack.connection.channel'),
	"text": "`Attention!` <!channel> There was an error in a mule app-> :warning: "
	++ "\n ---------------------------------------------------"
	++ "\n `ERROR PROVENIENTE DEL PACK DE CARTA PORTE`"
	++ "\n ---------------------------------------------------"
	++ "\n Fecha y hora ->" ++ now() as String
	++ "\n" ++ (vars.sendToSlack)
}]]]></slack:chatpost-message-content>
                    </slack:create-chatpost-message>
                    <error-handler>
                        <on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="d8c3d563-a153-4efc-877c-4568e296fcc8">
                            <logger level="ERROR" doc:name="Logger" doc:id="fdfff027-3105-4970-be3e-d7f957671f61" message="THIS SLACK ERROR DOES NOT AFFECT THE NORMAL PROCESS. ONLY THE MESSAGES DOES NOT ARRIVE TO SLACK. EVEN SO YOU HAVE TO REVIEW IT. #[error]" category="SLACK CONNECTIVITY." />
                        </on-error-continue>
                    </error-handler>
                </try>
            </on-error-propagate>
            <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="f7be221e-c58b-4804-9040-ab0924c948fd" type="ANY">
                <ee:transform doc:name="Transform Message" doc:id="47c74224-daf4-4e95-899f-a4cdd66ae06c">
                    <ee:message>
                        <ee:set-payload><![CDATA[output application/json
---
{
	"traxion_response": {
	
		"completed_succesfully": "false",
		"error": {
			"error_type": "UNIGIS " ++ error.errorType.asString,
			"user_error_description": error.description,
			"system_error_description": error.errorMessage.payload.traxion_response.error
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[500]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="process-pharma-api-console">
        <http:listener config-ref="process-pharma-api-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="process-pharma-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="post:\tms\bill_lading:application\json:process-pharma-api-config">
        <ee:transform doc:name="Set query param and declare payload back up" doc:id="4ca08765-77b9-4198-a633-70ba271c3702">
            <ee:message />
            <ee:variables>
                <ee:set-variable variableName="source_system"><![CDATA[%dw 2.0
output application/json
---
attributes.queryParams.source_system]]></ee:set-variable>
                <ee:set-variable variableName="originalPayload"><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <choice doc:name="Choice" doc:id="c3cc39bb-6c7c-4c9f-8665-3920c7a1b922">
            <when expression="#[upper(payload.traxion.tipo_operacion) == &quot;NUEVO&quot;]">
                <flow-ref doc:name="Call-orchestrator-post-tms-bill_lading" doc:id="52b3621b-ec25-49f5-a622-e594dcfc60c9" name="orchestrator-post-tms-bill_lading" />
            </when>
            <otherwise>
                <logger level="INFO" doc:name="Logger" doc:id="d3bf04d6-1fad-4cc1-8526-e5f8dc6691c3" message="#[payload]" />
            </otherwise>
        </choice>
    </flow>
    <flow name="post:\tms\load\confirmation:application\json:process-pharma-api-config">
        <flow-ref doc:name="Call-orchestrator-post-tms-load-confirmation" doc:id="bc0d65c9-ba92-41d0-ac44-64bbddc185ca" name="orchestrator-post-tms-load-confirmation" />
    </flow>
    <flow name="post:\tms\products:application\json:process-pharma-api-config">
        <flow-ref doc:name="Call-orchestrator-post-tms-products" doc:id="6948ed64-71e1-4954-8fff-9bee7b53e53b" name="orchestrator-post-tms-products" />
    </flow>
    <flow name="post:\tms\settled:application\json:process-pharma-api-config">
        <flow-ref doc:name="Call to orchestrator-post-tms-settled" doc:id="20f94a6f-eeb3-46a7-ac11-5964127108bc" name="orchestrator-post-tms-settled" />
        <!-- [STUDIO:"Transform Message"]<ee:transform doc:name="Transform Message">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
{
  traxion_response: {
    completed_succesfully: "true",
    response: {
      message: "successful",
      data: {}
    }
  }
} as Object {encoding: "UTF-8", mediaType: "application/json"}&#93;&#93;></ee:set-payload>
            </ee:message>
        </ee:transform> [STUDIO] -->
    </flow>
    <flow name="get:\cam\products:process-pharma-api-config">
        <flow-ref doc:name="Call to orchestrator-get-products" doc:id="1d3f4919-a7fc-4848-af8f-fe44ccf6132e" name="orchestrator-get-products" />
    </flow>
    <flow name="post:\cam\orders:process-pharma-api-config">
        <ee:transform doc:name="Transform Message" doc:id="4e39b9ed-7ad1-4483-aed0-bef179dd4a2e">
            <ee:message />
            <ee:variables>
                <ee:set-variable variableName="certification_date_to"><![CDATA[%dw 2.0
output application/java
---
attributes.queryParams.certification_date_to]]></ee:set-variable>
                <ee:set-variable variableName="certification_date_from"><![CDATA[%dw 2.0
output application/json
---
attributes.queryParams.certification_date_from]]></ee:set-variable>
                <ee:set-variable variableName="no_remision"><![CDATA[%dw 2.0
output application/json
---
attributes.queryParams.no_remision]]></ee:set-variable>
                <ee:set-variable variableName="status"><![CDATA[%dw 2.0
output application/json
---
attributes.queryParams.status]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <flow-ref doc:name="Call to orchestrator-get-orders" doc:id="9aa4d398-84ec-47aa-8a8e-2347c4c21ee6" name="orchestrator-get-orders" />
    </flow>
    <flow name="post:\crm\remisions\certified\report:process-pharma-api-config">
        <ee:transform doc:name="set params" doc:id="67392fa8-ca05-4fba-a7ce-34ec1b021ea6">
            <ee:message />
            <ee:variables>
                <ee:set-variable variableName="certification_date_to"><![CDATA[%dw 2.0
output application/java
---
attributes.queryParams.certification_date_to]]></ee:set-variable>
                <ee:set-variable variableName="certification_date_from"><![CDATA[%dw 2.0
output application/json
---
attributes.queryParams.certification_date_from]]></ee:set-variable>
                <ee:set-variable variableName="remision"><![CDATA[%dw 2.0
output application/json
---
attributes.queryParams.remision]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <logger level="INFO" doc:name="Logger" doc:id="e13d6942-44ea-4c81-86cd-720aa0108b5f" message="RANGO DE FECHAS  DESDE #[vars.certification_date_from] HASTA #[vars.certification_date_to]" />
        <flow-ref doc:name="orchestrator-get-remisions-certified-report-main" doc:id="aac25009-692d-4ac9-af97-d8420a29164a" name="orchestrator-get-remisions-certified-report-main" />
    </flow>
    <flow name="post:\imss\orders:application\json:process-pharma-api-config">
        <logger level="INFO" doc:name="Logger" doc:id="8a2054da-a31a-4f44-a24b-3916cc7bb0a2" message="#[payload]" />
        <ee:transform doc:name="Transform Message" doc:id="93e7692f-cc80-4ad5-a853-604a1848aa5a">
            <ee:message />
            <ee:variables>
                <ee:set-variable variableName="source_system"><![CDATA[%dw 2.0
output application/json
---
attributes.queryParams.source_system]]></ee:set-variable>
                <ee:set-variable variableName="payloadBK"><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <flow-ref doc:name="orchestrator-post-create-order-unigis-main" doc:id="cc819b51-b156-4a25-be7b-2e7db4aff22a" name="orchestrator-post-create-order-unigis-main" />
    </flow>
    <flow name="post:\slack\message:application\json:process-pharma-api-config">
        <logger level="INFO" doc:name="Logger" doc:id="012104c4-478f-499f-9561-d92d654e4c77" message="#[payload]" />
        <ee:transform doc:name="Transform Message">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload.message]]></ee:set-payload>
            </ee:message>
            <ee:variables>
                <ee:set-variable variableName="channel"><![CDATA[%dw 2.0
output application/json
---
payload.message_chanel]]></ee:set-variable>
                <ee:set-variable variableName="service_provider"><![CDATA[%dw 2.0
output application/json
---
payload.message_source]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <flow-ref doc:name="orchestrator-send-message-to-slack-main" doc:id="8a369e14-2bc6-48eb-804b-4de02bd2378d" name="orchestrator-send-message-to-slack-main" />
        <ee:transform doc:name="Transform Message">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  traxion_response: {
    completed_succesfully: "true",
    response: {
      message: "successful",
      data: {}
    }
  }
} as Object {encoding: "UTF-8", mediaType: "application/json"}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="get:\tms\carta-porte:process-pharma-api-config">
        <ee:transform doc:name="Transform Message">
            <ee:message />
            <ee:variables>
                <ee:set-variable variableName="identifier"><![CDATA[%dw 2.0
output application/json
---
attributes.queryParams.identifier]]></ee:set-variable>
                <ee:set-variable variableName="date"><![CDATA[%dw 2.0
output application/java
---
attributes.queryParams.date]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <flow-ref doc:name="orchestrator-get-documents-carta-porte-main" doc:id="0f270645-0fbc-4406-ad3a-b1fbbe02ebec" name="orchestrator-get-documents-carta-porte-main" />
    </flow>
    <flow name="post:\v2\tms\bill_lading:application\json:process-pharma-api-config">
        <!-- [STUDIO:"Transform Message"]<ee:transform doc:name="Transform Message">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
{
  traxion_response: {
    completed_succesfully: "true",
    response: {
      message: "successful",
      data: {}
    }
  }
} as Object {encoding: "UTF-8", mediaType: "application/json"}&#93;&#93;></ee:set-payload>
            </ee:message>
        </ee:transform> [STUDIO] -->
        <ee:transform doc:name="Set query param and declare payload back up" doc:id="7b75760c-5c78-417c-b0a3-b1321de61b54">
            <ee:message />
            <ee:variables>
                <ee:set-variable variableName="source_system"><![CDATA[%dw 2.0
output application/json
---
attributes.queryParams.source_system]]></ee:set-variable>
                <ee:set-variable variableName="originalPayload"><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
		<flow-ref doc:name="Call to orchestrator-post-tms-bill_lading_v2" doc:id="73a37aa8-5689-4d91-9af9-2f2b380acd1d" name="orchestrator-post-tms-bill_lading_v2"/>
    </flow>
</mule>
