<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:slack="http://www.mulesoft.org/schema/mule/slack" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
http://www.mulesoft.org/schema/mule/slack http://www.mulesoft.org/schema/mule/slack/current/mule-slack.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
    <http:listener-config name="process-pharma-api-httpListenerConfig">
        <http:listener-connection host="${http.listener.host}" port="${http.listener.port}" protocol="HTTPS" tlsContext="TLS_Context" readTimeout="${http.listener.read.timeout}" />
    </http:listener-config>
    <apikit:config name="process-pharma-api-config" api="resource::ab8117f6-d718-4307-b5f7-03262d589cd0:process-pharma-api:1.0.10:raml:zip:process-pharma-api.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <flow name="process-pharma-api-main">
        <http:listener config-ref="process-pharma-api-httpListenerConfig" path="${http.listener.path}">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body><![CDATA[#[payload]]]></http:body>
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="process-pharma-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "APIKIT-400",
			"user_error_description": "The server cannot or will not process the request due to something that is perceived to be a client error",
			"system_error_description": "Bad Request"
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[400]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "APIKIT-404",
			"user_error_description": "The origin server did not find a current representation for the target resource or is not willing to disclose that one exists",
			"system_error_description": "Not Found"
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[404]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "APIKIT-405",
			"user_error_description": "The method received in the request-line is known by the origin server but not supported by the target resource",
			"system_error_description": "Method Not Allowed"
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[405]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "APIKIT-406",
			"user_error_description": "The target resource does not have a current representation that would be acceptable to the user agent, according to the proactive negotiation header fields received in the request1, and the server is unwilling to supply a default representation",
			"system_error_description": "Not Acceptable"
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[406]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
		"completed_succesfully": "false",
		"error": {
			"error_type": "APIKIT-415",
			"user_error_description": "The origin server is refusing to service the request because the payload is in a format not supported by this method on the target resource",
			"system_error_description": "Unsupported Media Type"
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[415]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
	
		"completed_succesfully": "false",
		"error": {
			"error_type": "APIKIT-501",
			"user_error_description": "The server does not support the functionality required to fulfill the request",
			"system_error_description": "Not Implemented"
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[501]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="81b7b511-0687-4746-bb83-3132741084e1" type="HTTP:BAD_REQUEST">
                <ee:transform doc:name="Transform Message" doc:id="312352cd-9ea8-4de2-acc8-cdec6314bdff">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"traxion_response": {
	
		"completed_succesfully": "false",
		"error": {
			"error_type": error.errorType.namespace ++ ": " ++ error.errorType.asString,
			"user_error_description": error.description,
			"system_error_description": error.errorMessage.payload.traxion_response.error
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[400]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="f307ae51-e879-4b60-a5f6-948d39c4680a" type="ERROR:CARTAPORTE">
				<ee:transform doc:name="Transform Message" doc:id="795bf9b2-8234-4a4f-ac2e-4667ab5f1645" >
					<ee:message >
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="sendToSlack" ><![CDATA[%dw 2.0
output application/json
ns ns2 http://ws.edifactwstraxion/
---
write({
	"ERROR CARTA PORTE": vars.cpResponse.body.ns2#generaComprobanteResponse.return
})]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<slack:create-chatpost-message doc:name="Send Message" doc:id="0ab58cc6-db23-4969-98ca-8546b7557ace" config-ref="Slack_Connector_Config">
					<slack:chatpost-message-content ><![CDATA[#[%dw 2.0
output application/json
---
{
	"channel": Mule::p('slack.connection.channel'),
	"text": "`Attention!` <!channel> There was an error in a mule app-> :warning: "
	++ "\n ---------------------------------------------------"
	++ "\n `ERROR PROVENIENTE DEL PACK DE CARTA PORTE`"
	++ "\n ---------------------------------------------------"
	++ "\n Fecha y hora ->" ++ now() as String
	++ "\n" ++ (vars.sendToSlack)
}]]]></slack:chatpost-message-content>
				</slack:create-chatpost-message>
				<ee:transform doc:name="Transform Message" doc:id="5b532ab3-825e-447f-a804-35427e3b05ed" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
ns ns2 http://ws.edifactwstraxion/
---
{
	"ERROR CARTA PORTE": vars.cpResponse.body.ns2#generaComprobanteResponse.return
}]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="httpStatus" ><![CDATA[400]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="7fc67520-6a0b-485b-9ed8-bd371f4ec2a3" message="#[payload]" />
			</on-error-propagate>
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="a4eda8ea-f815-4e81-a113-de218810db6f" type="ERROR:CARTAPORTECAMPORFC">
				<ee:transform doc:name="Transform Message" doc:id="65d16329-714b-4869-804f-cd017ca2ccfc" >
					<ee:message >
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="sendToSlack" ><![CDATA[%dw 2.0
output application/json
---
write({
	"ERROR CARTA PORTE": error.description as String
})]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<slack:create-chatpost-message doc:name="Send Message" doc:id="e237af81-39d7-4b94-b266-9759f2ecbe9d" config-ref="Slack_Connector_Config">
					<slack:chatpost-message-content ><![CDATA[#[%dw 2.0
output application/json
---
{
	"channel": Mule::p('slack.connection.channel'),
	"text": "`Attention!` <!channel> There was an error in a mule app-> :warning: "
	++ "\n ---------------------------------------------------"
	++ "\n `ERROR PROVENIENTE DEL PACK DE CARTA PORTE`"
	++ "\n ---------------------------------------------------"
	++ "\n Fecha y hora ->" ++ now() as String
	++ "\n" ++ (vars.sendToSlack)
}]]]></slack:chatpost-message-content>
				</slack:create-chatpost-message>
				<ee:transform doc:name="Transform Message" doc:id="32e2c0a7-e27f-442f-a38c-1bddb4e8efc4" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"ERROR CARTA PORTE": error.description
}]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="httpStatus" ><![CDATA[400]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="359315c5-4178-446d-a75e-1156da5ee7e4" message="#[payload]"/>
			</on-error-propagate>
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="320c267e-a1e6-4997-bd9d-02c71ae77eab" type="ERROR:BADRFCCARTAPORTE">
				<ee:transform doc:name="Transform Message" doc:id="bf3f7ac8-3517-499f-bcfb-2660cb5c724a" >
					<ee:message />
					<ee:variables >
						<ee:set-variable variableName="sendToSlack" ><![CDATA[%dw 2.0
output application/json
ns ns2 http://ws.edifactwstraxion/
---
write({
	"ERROR CARTA PORTE": {
		"description": error.description as String,
		"responsePack": vars.cpResponse.body.ns2#generaComprobanteResponse.return
}
})]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<slack:create-chatpost-message doc:name="Send Message" doc:id="5684d72f-149f-4072-b39d-917a18d7f6b0" config-ref="Slack_Connector_Config" >
					<slack:chatpost-message-content ><![CDATA[#[%dw 2.0
output application/json
---
{
	"channel": Mule::p('slack.connection.channel'),
	"text": "`Attention!` <!channel> There was an error in a mule app-> :warning: "
	++ "\n ---------------------------------------------------"
	++ "\n `ERROR PROVENIENTE DEL PACK DE CARTA PORTE`"
	++ "\n ---------------------------------------------------"
	++ "\n Fecha y hora ->" ++ now() as String
	++ "\n" ++ (vars.sendToSlack)
}]]]></slack:chatpost-message-content>
				</slack:create-chatpost-message>
				<ee:transform doc:name="Transform Message" doc:id="a998489a-d277-4a1b-b473-9749137757f1" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"ERROR CARTA PORTE": error.description
}]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="httpStatus" ><![CDATA[400]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="a3d9e687-293c-4e08-9617-ae2dad5ba8ff" message="#[payload]" />
			</on-error-propagate>
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="f7be221e-c58b-4804-9040-ab0924c948fd" type="ANY">
                <ee:transform doc:name="Transform Message" doc:id="47c74224-daf4-4e95-899f-a4cdd66ae06c">
                    <ee:message>
                        <ee:set-payload><![CDATA[output application/json
---
{
	"traxion_response": {
	
		"completed_succesfully": "false",
		"error": {
			"error_type": "UNIGIS " ++ error.errorType.asString,
			"user_error_description": error.description,
			"system_error_description": error.errorMessage.payload.traxion_response.error
		}
	}
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[500]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="process-pharma-api-console">
        <http:listener config-ref="process-pharma-api-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="process-pharma-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="post:\tms\bill_lading:application\json:process-pharma-api-config">
        <ee:transform doc:name="Set query param and declare payload back up">
            <ee:message>
            </ee:message>
			<ee:variables >
				<ee:set-variable variableName="source_system" ><![CDATA[%dw 2.0
output application/json
---
attributes.queryParams.source_system]]></ee:set-variable>
				<ee:set-variable variableName="originalPayload" ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
				<ee:set-variable variableName="traslado" ><![CDATA[%dw 2.0
output application/json
---
{
      "serie": payload.carta_porte.ubicaciones.serie,
      "folio": payload.carta_porte.ubicaciones.folio,
      "lugar_expedicion": payload.carta_porte.ubicaciones.lugar_expedicion,
      "sociedad_sap": payload.sap_info.sociedad_sap,
      "exportacion": payload.carta_porte.ubicaciones.exportacion,
      "emisor": {
        "rfc": payload.carta_porte.ubicaciones.emisor.rfc,
        "nombre": payload.carta_porte.ubicaciones.emisor.nombre,
        "regimen_fiscal": payload.carta_porte.ubicaciones.emisor.regimen_fiscal,
        "domicilio": {
          "calle": payload.carta_porte.ubicaciones.emisor.domicilio.calle,
          "calle2": "",
          "ciudad": payload.carta_porte.ubicaciones.emisor.domicilio.ciudad,
          "estado": payload.carta_porte.ubicaciones.emisor.domicilio.estado,
          "pais": payload.carta_porte.ubicaciones.emisor.domicilio.pais,
          "postal": payload.carta_porte.ubicaciones.emisor.domicilio.postal
        }
      },
      "receptor": {
        "rfc": payload.carta_porte.ubicaciones.receptor.rfc,
        "nombre": payload.carta_porte.ubicaciones.receptor.nombre,
        "regimen_fiscal": payload.carta_porte.ubicaciones.receptor.regimen_fiscal,
        "domicilio": {
          "calle": payload.carta_porte.ubicaciones.receptor.domicilio.calle,
          "calle2": "",
          "ciudad": payload.carta_porte.ubicaciones.receptor.domicilio.ciudad,
          "estado": payload.carta_porte.ubicaciones.receptor.domicilio.estado,
          "pais": payload.carta_porte.ubicaciones.receptor.domicilio.pais,
          "postal": payload.carta_porte.ubicaciones.receptor.domicilio.postal
        }
      }
    }]]></ee:set-variable>
			</ee:variables>
        </ee:transform>
		<choice doc:name="Choice" doc:id="c3cc39bb-6c7c-4c9f-8665-3920c7a1b922" >
			<when expression='#[upper(payload.traxion.tipo_documento) == "TRASLADO"]'>
				<flow-ref doc:name="Call-orchestrator-post-tms-bill_lading" doc:id="52b3621b-ec25-49f5-a622-e594dcfc60c9" name="orchestrator-post-tms-bill_lading" />
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Logger" doc:id="d3bf04d6-1fad-4cc1-8526-e5f8dc6691c3" message="#[payload]"/>
			</otherwise>
		</choice>
    </flow>
    <flow name="post:\tms\load\confirmation:application\json:process-pharma-api-config">
        <flow-ref doc:name="Call-orchestrator-post-tms-load-confirmation" doc:id="bc0d65c9-ba92-41d0-ac44-64bbddc185ca" name="orchestrator-post-tms-load-confirmation" />
    </flow>
    <flow name="post:\tms\products:application\json:process-pharma-api-config">
        <flow-ref doc:name="Call-orchestrator-post-tms-products" doc:id="6948ed64-71e1-4954-8fff-9bee7b53e53b" name="orchestrator-post-tms-products" />
    </flow>
    <flow name="post:\tms\settled:application\json:process-pharma-api-config">
        <flow-ref doc:name="Call to orchestrator-post-tms-settled" doc:id="20f94a6f-eeb3-46a7-ac11-5964127108bc" name="orchestrator-post-tms-settled" />
        <!-- [STUDIO:"Transform Message"]<ee:transform doc:name="Transform Message">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
{
  traxion_response: {
    completed_succesfully: "true",
    response: {
      message: "successful",
      data: {}
    }
  }
} as Object {encoding: "UTF-8", mediaType: "application/json"}&#93;&#93;></ee:set-payload>
            </ee:message>
        </ee:transform> [STUDIO] -->
    </flow>
    <flow name="get:\cam\products:process-pharma-api-config">
        <flow-ref doc:name="Call to orchestrator-get-products" doc:id="1d3f4919-a7fc-4848-af8f-fe44ccf6132e" name="orchestrator-get-products" />
    </flow>
    <flow name="post:\cam\orders:process-pharma-api-config">
        <ee:transform doc:name="Transform Message" doc:id="4e39b9ed-7ad1-4483-aed0-bef179dd4a2e">
            <ee:message />
            <ee:variables>
                <ee:set-variable variableName="certification_date_to"><![CDATA[%dw 2.0
output application/java
---
attributes.queryParams.certification_date_to]]></ee:set-variable>
                <ee:set-variable variableName="certification_date_from"><![CDATA[%dw 2.0
output application/json
---
attributes.queryParams.certification_date_from]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <flow-ref doc:name="Call to orchestrator-get-orders" doc:id="9aa4d398-84ec-47aa-8a8e-2347c4c21ee6" name="orchestrator-get-orders" />
    </flow>
</mule>
