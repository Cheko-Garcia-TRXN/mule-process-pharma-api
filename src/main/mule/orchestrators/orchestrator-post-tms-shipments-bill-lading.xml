<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
	<sub-flow name="orchestrator-post-tms-bill_lading" doc:id="a1f274b8-8173-4381-9680-c3ad654e8f58" >
		<logger level="INFO" doc:name="Logger" doc:id="5ac23ef9-b6eb-4092-8597-359d561d4233" message="#[payload]"/>
		<flow-ref doc:name="Call-orchestrator-post-tms-shipments-bill-lading-traslado" doc:id="c0a290e5-be59-42c0-a2e9-648bf7054c63" name="orchestrator-post-tms-shipments-bill-lading-traslado"/>
		<flow-ref doc:name="Call-orchestrator-post-tms-shipments-bill-lading-send-document-pdf-carta-porte" doc:id="12562f56-e637-4f32-8b1e-9222fbfb7056" name="orchestrator-post-tms-shipments-bill-lading-send-document-pdf-carta-porte"/>
		<flow-ref doc:name="Call-orchestrator-post-tms-shipments-bill-lading-modify-resp-doc-creation" doc:id="5023f461-aadd-43d1-ae11-b59eee32f027" name="orchestrator-post-tms-shipments-bill-lading-modify-resp-doc-creation"/>
		<!-- [STUDIO:"Call-orchestrator-post-tms-shipments-bill-lading-send-document-pdf-and-xml-carta-porte"]<flow-ref doc:name="Call-orchestrator-post-tms-shipments-bill-lading-send-document-pdf-and-xml-carta-porte" doc:id="04e5d29a-4d0c-4178-82ef-90a4bf7db1e1" name="orchestrator-post-tms-shipments-bill-lading-send-document-pdf-and-xml-carta-porte" /> [STUDIO] -->
		<flow-ref doc:name="Call-orchestrator-post-tms-shipments-provision-sap-process-001" doc:id="0b8b7314-ad16-4606-9340-4643bc31ab0f" name="orchestrator-post-tms-shipments-provision-sap-process-001"/>
		<flow-ref doc:name="Call-orchestrator-post-tms-shipments-sales-order-process-003" doc:id="6ce8cca8-905f-4ed9-ac63-68622d8e21c5" name="orchestrator-post-tms-shipments-sales-order-process-003"/>
		<flow-ref doc:name="Call-orchestrator-post-tms-shipments-bill-join-responses-provs-sales" doc:id="d3b6c4fc-c252-4ad3-94cd-39f2d269da13" name="orchestrator-post-tms-shipments-bill-join-responses-provs-sales"/>
		<flow-ref doc:name="Call-orchestrator-post-tms-shipments-bill-lading-set-response-sap-info" doc:id="4eeb1c67-779c-40ad-a3b6-847ae827ca83" name="orchestrator-post-tms-shipments-bill-lading-set-response-sap-info"/>
		<flow-ref doc:name="Call-orchestrator-post-tms-shipments-bill-lading-update-response-sap-info" doc:id="3cf00b6a-8301-4b48-a012-d9f8def86952" name="orchestrator-post-tms-shipments-bill-lading-update-response-sap-info"/>
		<logger level="INFO" doc:name="Logger" doc:id="e39f241f-9855-4733-998e-e881d99cac4c" message="#[payload]"/>
	</sub-flow>
	<sub-flow name="orchestrator-post-tms-shipments-bill-lading-traslado" doc:id="7034adce-6810-4ee6-b910-d57ffade1e52">
		<ee:transform doc:name="Create mapping bill lading original structure" doc:id="ddea9e09-7ae5-4f19-aeb4-71683c87b481">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="originalPayloadCp"><![CDATA[%dw 2.0
output application/json
import * from dw::core::Strings
import * from dw::core::Dates
fun date(dte) = (substring(dte,7,11) as String) ++ "-" ++ (if ( (substring(dte,0,3) as String == "Jan") ) "01"  else if ( (substring(dte,0,3) as String == "Feb") ) "02" else if ( (substring(dte,0,3) as String == "Mar") ) "03" else if ( (substring(dte,0,3) as String == "Apr") ) "04" else if ( (substring(dte,0,3) as String == "May") ) "05" else if ( (substring(dte,0,3) as String == "Jun") ) "06" else if ( (substring(dte,0,3) as String == "Jul") ) "07" else if ( (substring(dte,0,3) as String == "Aug") ) "08" else if ( (substring(dte,0,3) as String == "Sep") ) "09" else if ( (substring(dte,0,3) as String == "Oct") ) "10" else if ( (substring(dte,0,3) as String == "Nov") ) "11" else if ( (substring(dte,0,3) as String == "Dec") ) "12" else "") ++ "-" ++ (substring(dte,4,5) as String) ++ "T" ++ (substring(dte,13,21) as String)
//Funciones para sumar campo cantidad en mercancias
fun sumTot(canTot) = canTot reduce ((item, accumulator=0)->accumulator + item.cantidad as Number)
fun suma(cantidad) = sum(cantidad map ((item, index) -> item.cantidad as Number))
---
{
	"traxion": {
		"empresa": payload.traxion.empresa,
		"fecha_hora": now() as String {
			format: "uuuu-MM-dd'T'KK:mm:ss"
		},
		"tipo_documento": payload.traxion.tipo_documento,
		"tipo_operacion": payload.traxion.tipo_operacion,
		"identificador_pedido": payload.traxion.identificador_pedido
	},
	"carta_porte": {
		"version": payload.carta_porte.version,
		"pais_origen_destino": payload.carta_porte.pais_origen_destino,
		"serie": payload.carta_porte.serie,
		"exportacion": "01",
		"folio": "",
		"tipo": {
			"via_entrada_salida": "01",
			"transporte_internacional": "No",
			"entrada_salida": ""
		},
		"ubicaciones": payload.carta_porte.ubicaciones map ({
			"id_estacion": $.id_estacion,
			"tipo_estacion": $.tipo_estacion,
			"remitente": $.rfc,
			"distancia_recorrida": $.distancia_recorrida,
			"num_reg_id_trib": "",
			"pais_residencia": "",
			"fecha": $.fecha,
			"regimen_fiscal": $.regimen_fiscal,
			"nombre": $.nombre,
			"domicilio": {
				"calle": $.domicilio.calle,
				"ciudad": $.domicilio.ciudad,
				"estado": $.domicilio.estado,
				"pais": $.domicilio.pais,
				"postal": $.domicilio.postal
			}
		}),
		"mercancias": {
			"total_mercancias": sumTot(payload.carta_porte.mercancias.detalles), // Otra forma de hacerlo directo en el campo: sumTot(payload.carta_porte.mercancias.detalles) 
			// | payload.carta_porte.mercancias.detalles reduce ((item, accumulator=0) ->accumulator + item.cantidad )  
			// |  sum(payload.carta_porte.mercancias.detalles map ((item, index) ->item.cantidad as Number ))
			// |  sum(payload.carta_porte.mercancias.detalles map ($.cantidad as Number))
			// |  suma(payload.carta_porte.mercancias.detalles)
			"unidad_peso": payload.carta_porte.mercancias.unidad_peso,
			"detalles": payload.carta_porte.mercancias.detalles map {
				"clave_producto": $.clave_producto,
				"descripcion": $.descripcion,
				"cantidad": $.cantidad,
				"clave": "XPK",
				"id_origen": $.id_origen,
				"id_destino": $.id_destino,
				"peligroso": $.peligroso,
				"clave_peligroso": $.clave_peligroso,
				"embalaje": $.embalaje,
				"peso_kg": $.peso_kg,
				"guias": $.guias
			}
		},
		"figura_transporte": payload.carta_porte.figura_transporte,
	}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Create mapping for nodes E1EDMXCFDIK06 and E1EDMXCFDIK07 to add to idoc structure" doc:id="d4beaf15-37aa-48de-b03a-84b8a2ce891f" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="nodesIdoc" ><![CDATA[%dw 2.0
output application/xml writeDeclaration=false
import * from dw::core::Arrays
---
root:{
    E1EDMXCFDIK06 @(SEGMENT:1): drop(payload.carta_porte.ubicaciones,1) map ((item, index) -> {
        CUST_TAX_NUM: item.rfc,
        CUST_NAME: item.nombre,
        E1EDMXCFDIK33_06 @(SEGMENT:1):{
            CFDI_USAGE: "S01",
            DOMICILIO_FISCAL_RECEPTOR: item.domicilio.postal,
            REGIMEN_FISCAL_RECEPTOR: item.regimen_fiscal
        }
      }),
      E1EDMXCFDIK07 @(SEGMENT:1): drop(payload.carta_porte.ubicaciones,1) map ((item, index) -> {
            CMPNY_DISTRICT: item.domicilio.calle,
            CMPNY_CITY: item.domicilio.ciudad,
            CMPNY_2ND_DISTRICT: item.domicilio.calle2,
            CMPNY_STATE: item.domicilio.estado,
            CMPNY_COUNTRY: item.domicilio.pais,
            CMPNY_POST_CODE: item.domicilio.postal
        })
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="Choice" doc:id="a85d09a3-3012-4ea9-a120-4b236e6a46b2">
			<when expression='#[upper(payload.traxion.tipo_documento) == "TRASLADO"]'>
				<parse-template doc:name="Idoc traslado" doc:id="267749b4-f6f0-468e-a0f2-9cee278ab9c5" location="template_cfdi/template_idoc_traslado.xml" outputMimeType="application/xml" outputEncoding="UTF-8" />
			</when>
			<otherwise>
				<parse-template doc:name="Idoc sustitucion" doc:id="07cd2cd3-2c7e-4e31-a9d1-b9c43f31adf4" location="template_cfdi/template_idoc_sustitucion.xml" outputMimeType="application/xml" outputEncoding="UTF-8" />
			</otherwise>
		</choice>
		<ee:transform doc:name="Transform template to xml" doc:id="b516a25c-49f7-4e49-b86e-3e4cfd1a4542">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/xml writeDeclaration = false
---
payload  update {
    case nodes at.MXCFDIREQ002.IDOC -> {
        (nodes ++ vars.nodesIdoc.root)
    }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Mapping mercancÃ­as, set variable mercancias" doc:id="3b03ba03-fa26-4223-b74b-f80e9608d754">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="mercancias"><![CDATA[%dw 2.0
output application/xml writeDeclaration=false

import * from dw::core::Strings
---
root:{
    E1EDMXCFDIK08_LINE @(SEGMENT:1): vars.originalPayload.carta_porte.mercancias.detalles map ((item, index) -> {
        QUANTITY: item.cantidad,
      ID_NUMBER: leftPad(index +1,6,0),
      DESCRIPT: item.descripcion,
      UNIT_PRICE: 0,
      AMOUNT_NET: 0,
      ITEMNUM_INT: rightPad(leftPad(index +1,5,0),6,0),
      CLAVE_UNIDAD: item.clave,
      OBJETO_IMP: "01",
      E1EDMXCFDIK33_08_LINE @(SEGMENT:1):{
          PRODUCT_CODE: item.clave_producto,
          UOM_CODE: "E48",
          DISCOUNT: null
      },
      E1EDPT1 @(SEGMENT:1):{
      	TDID: "CGD",
      	TSSPRAS: "S",
      	TSSPRAS_ISO: "ES",
      	E1EDPT2 @(SEGMENT:1):{
      		TDLINE: item.descripcion,
      		TDFORMAT: "*"
      	}
      }
    })
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Add mercancias into template xml" doc:id="4eb3dfe6-3115-49c1-81d5-752c05dd36a7">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/xml writeDeclaration = false
---
payload update{
	case merc at.MXCFDIREQ002.IDOC -> {
		(merc ++ vars.mercancias.root)
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Set variable arg0, tansform payload to base64" doc:id="a06ec61e-6edc-42ae-8832-6d38191574db">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="arg0"><![CDATA[%dw 2.0
output text/plain
import * from dw::core::Binaries
fun base64() = do{
	var xml = write(payload, 'text/xml', {writeDeclaration: "false"})
	---
	toBase64(xml as Binary)
}
---
base64()]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Add generarComprobante node to original payload and set request variable" doc:id="1b2b2ffd-2c28-4cfd-a070-42ced4803647">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
ns ns0 http://ws.edifactwstraxion/
---
vars.originalPayloadCp ++ 	"generaComprobante": {
		arg0: vars.arg0,
		arg1: vars.originalPayloadCp.carta_porte.ubicaciones[0].remitente,
		arg2: "FA",
		arg3: now() >> "America/Mexico_City" as String {format: "yyyy-MM-dd'T'HH:mm:ss"},
		arg4: "TRAXIONEDIFACT",
		arg5: "3D1FACTMX2020\$"
	}]]></ee:set-payload>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="request"><![CDATA[%dw 2.0
output application/java
---
{
	path: Mule::p('client.system.pac.http.path.comprobante'),
	method: "POST",
	queryParams:{
		cartaPorte: 'true'
	}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<async doc:name="Async" doc:id="ee6fb9de-d426-4fa2-87da-df16ac3a981b">
			<ee:transform doc:name="Transform original payload carta porte" doc:id="6ba866f1-307f-461b-8b45-e26f548104f0">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	correlationId: correlationId,
	empresa: vars.originalPayloadCp.traxion.empresa,
	tipoDocumento:  vars.originalPayloadCp.traxion.tipo_documento,
	tipoOperacion:  vars.originalPayloadCp.traxion.tipo_operacion,
	idPedido:  vars.originalPayloadCp.traxion.identificador_pedido,
	trackingLogger: "salesorder_request",
	message: write(payload),
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Call-client-jms" doc:id="be0c6bff-e126-4a3e-a342-fecba627fcbe" name="client-jms" />
		</async>
		<flow-ref doc:name="Call-client-system-edifact" doc:id="ffb756d7-2f09-4d30-acb9-abbc5f5a6dc1" name="client-system-edifact" />
		<async doc:name="Async" doc:id="8f6a70ec-dd83-4939-b7de-7fb919113603">
			<ee:transform doc:name="Transform original payload carta porte" doc:id="02b0de36-36f6-4268-96f8-d54f7574dfcc">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	correlationId: correlationId,
	empresa: vars.originalPayloadCp.traxion.empresa,
	tipoDocumento:  vars.originalPayloadCp.traxion.tipo_documento,
	tipoOperacion:  vars.originalPayloadCp.traxion.tipo_operacion,
	idPedido:  vars.originalPayloadCp.traxion.identificador_pedido,
	trackingLogger: "salesorder_response",
	message: write(payload),
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Call-client-jms" doc:id="0cde8ac9-36d5-41fe-8b87-08bfd9359bf6" name="client-jms" />
		</async>
	</sub-flow>
	<sub-flow name="orchestrator-post-tms-shipments-bill-lading-send-document-pdf-carta-porte" doc:id="da8a09d3-707c-45e7-ab4e-b38ca6a6f8a6" >
		<parallel-foreach doc:name="Parallel For Each" doc:id="4ed55ce2-d468-49c2-acec-8d2181951fcf" collection="#[vars.originalPayload.sap_info]" target="createDocsResp">
			<ee:transform doc:name="Prepare data from bill lading response to send PDF to unigis" doc:id="a079b754-1588-4e7a-bb89-ddc2946cfe37" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/json
import * from dw::core::Periods
ns ns2 http://ws.edifactwstraxion/
var refFecha = do {
	var fecha = vars.cpResponse.body.ns2#generaComprobanteResponse.return.fechaTimbrado
	var fechaPartes = fecha splitBy "T"
	var fechaParte = fechaPartes[0] splitBy "-" joinBy ""
	var horaParte = fechaPartes[1] splitBy ":" joinBy ""
	---
	fechaParte ++ horaParte ++ "145"
}
var fechForm = do{
	var form = vars.cpResponse.body.ns2#generaComprobanteResponse.return.fechaTimbrado + days(15)
	---
	form
}
---
{
	"crearDocumentos": {
		"Documentos": {
			"pDocumento": {
				"tipoDocumento": "CP",
				"referencia": "CP" ++ refFecha,
				"fechaEmision": vars.cpResponse.body.ns2#generaComprobanteResponse.return.fechaTimbrado,
				"fechaExpiracion": fechForm as String {format: "yyyy-MM-dd'T'HH:mm:ss"},
				"categoria": "Carta Porte",
				"clase": "Propio",
				"observaciones": "Carta porte inicial",
				"referenciaEstadoDocumento": "Inicial",
				"forzarActualizacion": "1",
				"asociaciones": {
					"referenciaViaje": payload.numero_pedido
				},
				"archivosAsociados": {
					"pArchivoDoc": {
						"descripcion": vars.cpResponse.body.ns2#generaComprobanteResponse.return.noCertificado,
						"tipoArchivo": ".PDF",
						"contenido": vars.cpResponse.body.ns2#generaComprobanteResponse.return.documentopdf,
						"clasificacionArchivo": "CP"
					}
				},
				"crearDocumentoRequeridoViaje": "false",
				"idViaje": vars.originalPayload.traxion.identificador_pedido,
				"esDocumentoRequerido": "false"
			}
		}
	}
}]]></ee:set-payload>
				</ee:message>
				<ee:variables />
			</ee:transform>
			<flow-ref doc:name="Call-clients-system-unigis-post-tms-bill_lading-send-carta-porte-documents" doc:id="4ea241a0-cc73-4607-9d68-fa559bb1d3f6" name="clients-system-unigis-post-tms-bill_lading-send-carta-porte-documents" />
		</parallel-foreach>
		<ee:transform doc:name="Extract array" doc:id="a805abe9-1a8e-404d-88f6-2ff200822770" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="createDocsRespExtract" ><![CDATA[%dw 2.0
output application/json
---
vars.createDocsResp map($.typedValue)]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
	</sub-flow>
	<sub-flow name="orchestrator-post-tms-shipments-bill-lading-modify-resp-doc-creation" doc:id="df9e2155-76c9-4d4a-b924-36ed5dabf694">
		<parallel-foreach doc:name="Parallel For Each" doc:id="d866d793-9c7b-43bb-be21-b5416f318e72" collection="#[vars.originalPayload.sap_info]" target="modRespDoc">
			<ee:transform doc:name="Transform Message" doc:id="06a1f767-38b1-454f-a9d2-71bfa1ce26d8">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"numeroPedido": payload.numero_pedido
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		</parallel-foreach>
		<ee:transform doc:name="Extract array" doc:id="aec00fe1-2256-49d7-bfbf-0c596d45cae2" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="modRespDocExtracArray" ><![CDATA[%dw 2.0
output application/json
---
vars.modRespDoc.typedValue map((itemModResp) -> 
	vars.createDocsRespExtract map((itemCreateDocResp) -> 
		itemModResp ++ itemCreateDocResp
	) reduce((item, accumulator) -> accumulator)
)]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="63e2d708-18d6-42f0-b97a-2137c1eb9723" message="#[vars.modRespDocExtracArray]"/>
	</sub-flow>
	<!-- [STUDIO:"orchestrator-post-tms-shipments-bill-lading-send-document-pdf-and-xml-carta-porte"]<sub-flow name="orchestrator-post-tms-shipments-bill-lading-send-document-pdf-and-xml-carta-porte" doc:id="f1206452-6ecd-45d6-9286-7895cd337bc8" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="97ffcadf-25d0-4c37-9571-bc83d9dcc72a" target="arrayScatter">
			<route >
				<parallel-foreach doc:name="Parallel For Each" doc:id="3a55c298-e6b6-4c6e-8b4b-009759eb367b" collection="#[vars.originalPayload.sap_info&#93;" target="auxArrayXmlReqPrepare">
					<ee:transform doc:name="Prepare data from bill lading response to send XML to unigis" doc:id="d1ed7d39-7e7d-4974-8a9c-8c3a4b7a5bec">
			<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
ns ns2 http://ws.edifactwstraxion/
var refFecha = do {
	var fecha = vars.cpResponse.body.ns2#generaComprobanteResponse.return.fechaTimbrado
	var fechaPartes = fecha splitBy "T"
	var fechaParte = fechaPartes[0&#93; splitBy "-" joinBy ""
	var horaParte = fechaPartes[1&#93; splitBy ":" joinBy ""
	&#45;&#45;-
	fechaParte ++ horaParte ++ "145"
}
var fechForm = do{
	var form = vars.cpResponse.body.ns2#generaComprobanteResponse.return.fechaTimbrado + days(15)
	&#45;&#45;-
	form
}
&#45;&#45;-
{
	"crearDocumentos": {
		"Documentos": {
			"pDocumento": {
				"tipoDocumento": "CP",
				"referencia": "CP" ++ refFecha,
				"fechaEmision": vars.cpResponse.body.ns2#generaComprobanteResponse.return.fechaTimbrado,
				"fechaExpiracion": fechForm as String {format: "yyyy-MM-dd'T'HH:mm:ss"},
				"categoria": "Carta Porte",
				"clase": "Propio",
				"observaciones": "Carta porte inicial",
				"referenciaEstadoDocumento": "Inicial",
				"forzarActualizacion": "1",
				"asociaciones": {
					"referenciaViaje": payload.numero_pedido
				},
				"archivosAsociados": {
					"pArchivoDoc": {
						"descripcion": vars.cpResponse.body.ns2#generaComprobanteResponse.return.noCertificado,
						"tipoArchivo": ".XML",
						"contenido": vars.cpResponse.body.ns2#generaComprobanteResponse.return.documentoxml,
						"clasificacionArchivo": "CP"
					}
				},
				"crearDocumentoRequeridoViaje": "false",
				"idViaje": vars.originalPayload.traxion.identificador_pedido,
				"esDocumentoRequerido": "false"
			}
		}
	}
}&#93;&#93;></ee:set-payload>
			</ee:message>
			<ee:variables>
			</ee:variables>
		</ee:transform>
					<flow-ref doc:name="Call-clients-system-unigis-post-tms-bill_lading-send-carta-porte-documents" doc:id="7869a1c4-6062-44c1-8d07-4b9907e2542f" name="clients-system-unigis-post-tms-bill_lading-send-carta-porte-documents" />
				</parallel-foreach>
			</route>
			<route >
				<parallel-foreach doc:name="Parallel For Each" doc:id="c4830801-64f5-4424-ba22-fdf647bbbaae" target="auxArrayPdfReqPrepare" collection="#[vars.originalPayload.sap_info&#93;">
					<ee:transform doc:name="Prepare data from bill lading response to send PDF to unigis" doc:id="194bff46-30b7-4017-b8c1-af358dcf4039">
			<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
ns ns2 http://ws.edifactwstraxion/
var refFecha = do {
	var fecha = vars.cpResponse.body.ns2#generaComprobanteResponse.return.fechaTimbrado
	var fechaPartes = fecha splitBy "T"
	var fechaParte = fechaPartes[0&#93; splitBy "-" joinBy ""
	var horaParte = fechaPartes[1&#93; splitBy ":" joinBy ""
	&#45;&#45;-
	fechaParte ++ horaParte ++ "145"
}
var fechForm = do{
	var form = vars.cpResponse.body.ns2#generaComprobanteResponse.return.fechaTimbrado + days(15)
	&#45;&#45;-
	form
}
&#45;&#45;-
{
	"crearDocumentos": {
		"Documentos": {
			"pDocumento": {
				"tipoDocumento": "CP",
				"referencia": "CP" ++ refFecha,
				"fechaEmision": vars.cpResponse.body.ns2#generaComprobanteResponse.return.fechaTimbrado,
				"fechaExpiracion": fechForm as String {format: "yyyy-MM-dd'T'HH:mm:ss"},
				"categoria": "Carta Porte",
				"clase": "Propio",
				"observaciones": "Carta porte inicial",
				"referenciaEstadoDocumento": "Inicial",
				"forzarActualizacion": "1",
				"asociaciones": {
					"referenciaViaje": payload.numero_pedido
				},
				"archivosAsociados": {
					"pArchivoDoc": {
						"descripcion": vars.cpResponse.body.ns2#generaComprobanteResponse.return.noCertificado,
						"tipoArchivo": ".PDF",
						"contenido": vars.cpResponse.body.ns2#generaComprobanteResponse.return.documentopdf,
						"clasificacionArchivo": "CP"
					}
				},
				"crearDocumentoRequeridoViaje": "false",
				"idViaje": vars.originalPayload.traxion.identificador_pedido,
				"esDocumentoRequerido": "false"
			}
		}
	}
}&#93;&#93;></ee:set-payload>
			</ee:message>
			<ee:variables>
			</ee:variables>
		</ee:transform>
					<flow-ref doc:name="Call-clients-system-unigis-post-tms-bill_lading-send-carta-porte-documents" doc:id="252ef544-da84-4a97-9354-28cc6e76035a" name="clients-system-unigis-post-tms-bill_lading-send-carta-porte-documents" />
				</parallel-foreach>
			</route>
		</scatter-gather>
		<logger level="INFO" doc:name="Shows result from scatter gather" doc:id="3f5b7b10-a4ea-4379-b8cf-6293bba32500" message="#[//Tow ways to extract the result from scatter gather&#10;//flatten(valuesOf(vars.arrayScatter) map((item)-&gt;item.*vars.arrayScatter))&#10;(vars.arrayScatter pluck((value)-&gt;value)) map((item)-&gt;item.typedValue)&#93;"/>
	</sub-flow> [STUDIO] -->
	<sub-flow name="orchestrator-post-tms-shipments-provision-sap-process-001" doc:id="aec606f4-a705-4f8b-aff5-2b3a661cf08f" >
		<!-- [STUDIO:"For Each"]<foreach doc:name="For Each" doc:id="4d777a31-dd54-416e-8748-df8597b121ba" collection="#[vars.originalPayload.sap_info&#93;">
			<ee:transform doc:name="Set request income provision" doc:id="170094e0-5012-49df-b3c4-92f401dcc433">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
import * from dw::util::Coercions
fun formatdate(d: DateTime) = d as String {
	format: "yyyyMMdd"
}
&#45;&#45;-
{
	"operation": "provisioningreso",
	"order": "1",
	"originalRequst": true,
	"sap_request": {
		"IM_SYSTEM": "0000000015",
		"PROCESS": "001", //001 provision ingreso y 003 para peido de venta (orden de venta), 002 actualizaciÃ³n de provisiÃ³n, 004 carta porte(pedido venta con factura), 06A sustituciÃ³n
		"SERIE": "",
		"VBAK_VKORG": "MD00",
		"VBAK_VTWEG": "10",
		"VBAK_SPART": "10",
		"VBAK_VKBUR": "MD00",
		"VBAK_VKGRP": "MD0",
		"VBAK_XBLNR": "",
		"KUAGV_KUNNR": payload.id_cliente,
		"VBKD_BSTKD": payload.numero_pedido,
		"VBKD_BSTDK": formatdate(now() >> toTimeZone("America/Mexico_City")),
		"VBKD_ZTERM": "N015",
		"VBAK_AUGRU": "C10",
		"VBAK_WAERK": payload.codigo_moneda,
		"VBAK_ABRVW": "N",
		"VBKD_BZIRK": "Z01001",
		"VBKD_KDKG1": "01",
		"VBKD_SDABW": "0001",
		"VBPA_PARVW1": "",
		"VBPA_KUNNR1": "",
		"VBPA_PARVW2": "",
		"VBPA_KUNNR2": "",
		"VBPA_PARVW3": "",
		"VBPA_KUNNR3": "",
		"VBKD_BSARK": "CMX",
		"VBAK_BNAME": "",
		"VBAK_TELF1": "",
		"VBAK_SUBMI": "",
		"VBKD_IHREZ_E": "",
		"VBKD_BSTKD_E": "",
		"VBKD_BSTDK_E": "",
		"VBAK_KVGR1": "999",
		"VBAK_KVGR2": "",
		"KONV_KBETR": payload.monto,
		"TEXT_LINE_C001": payload.numero_pedido,
		"TEXT_LINE_C002": "",
		"TEXT_LINE_C003": "AjusteDIC1.5",
		"TEXT_LINE_C004": "",
		"TEXT_LINE_C005": "",
		"TEXT_LINE_C006": "",
		"TEXT_LINE_C007": "r.baez",
		"IM_T_SD_P_": [{
			"VBAP_POSNR": "000010",
			"VBAP_MATNR": "000000000003000727",
			"VBAP_ARKTX": "Servicios Logisticos",
			"VBAP_KDMAT": "",
			"VBAP_KWMENG": "1",
			"VBAP_VRKME": "",
			"TEXT_LINE_P001": "",
			"VBAP_WERKS": "6001",
			"VBKD_IHREZ": "",
			"VBAP_VOLUM": "",
			"VBKD_KDKG1": "01",
			"VBKD_SDABW": "0001",
			"VBAP_NTGEW": "",
			"KONP_KBETR": payload.monto,
			"COBL_PRCTR": payload.centro_beneficio,
			"VBEP_TDDAT": formatdate(now() >> toTimeZone("America/Mexico_City")),
			"VBEP_TDUHR": "000000",
			"VBEP_EDATU": formatdate(now() >> toTimeZone("America/Mexico_City")),
			"VBEP_EZEIT": "000000"
		}&#93;,
		"EX_RETURN": {
			"IM_SYSTEM": "",
			"PROCESS": "",
			"VBRK_VBELN": "",
			"VBAK_VBELN": "",
			"VBKD_BSTKD": "",
			"EXT_T_MENSAJE": [""&#93;
		}
	}
}&#93;&#93;></ee:set-payload>
			</ee:message>
		</ee:transform>
			<flow-ref doc:name="Call-client-system-sap" doc:id="c31826b0-288a-440f-9b51-8baa6de9ce4f" name="client-system-sap" target="provIngrResp" />
			<ee:transform doc:name="Set auxiliar array variable" doc:id="05d776ea-0b32-4a95-ae8e-7de3ba018665" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="provIngrAuxArray" ><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
(vars.provIngrAuxArray default [&#93;) + vars.provIngrResp&#93;&#93;></ee:set-variable>
				</ee:variables>
			</ee:transform>
		</foreach> [STUDIO] -->
		<parallel-foreach doc:name="Parallel For Each" doc:id="0188de4f-42ff-4132-9cab-45ddf1a2d0a2" collection="#[vars.originalPayload.sap_info]" target="provIngrAuxArray">
			<ee:transform doc:name="Set request income provision" doc:id="b2c04064-f377-4d66-9333-8d9f23b7eaa1" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/json
import * from dw::util::Coercions
fun formatdate(d: DateTime) = d as String {
	format: "yyyyMMdd"
}
---
{
	"operation": "provisioningreso",
	"order": "1",
	"originalRequst": true,
	"sap_request": {
		"IM_SYSTEM": "0000000015",
		"PROCESS": "001", //001 provision ingreso y 003 para peido de venta (orden de venta), 002 actualizaciÃ³n de provisiÃ³n, 004 carta porte(pedido venta con factura), 06A sustituciÃ³n
		"SERIE": "",
		"VBAK_VKORG": "MD00",
		"VBAK_VTWEG": "10",
		"VBAK_SPART": "10",
		"VBAK_VKBUR": "MD00",//3000710
		"VBAK_VKGRP": "MD0",//3000718
		"VBAK_XBLNR": "",
		"KUAGV_KUNNR": payload.id_cliente,
		"VBKD_BSTKD": payload.numero_pedido,
		"VBKD_BSTDK": formatdate(now() >> toTimeZone("America/Mexico_City")),
		"VBKD_ZTERM": "N015",
		"VBAK_AUGRU": "C10",
		"VBAK_WAERK": payload.codigo_moneda,
		"VBAK_ABRVW": "N",
		"VBKD_BZIRK": "Z01001",
		"VBKD_KDKG1": "01",
		"VBKD_SDABW": "0001",
		"VBPA_PARVW1": "",
		"VBPA_KUNNR1": "",
		"VBPA_PARVW2": "",
		"VBPA_KUNNR2": "",
		"VBPA_PARVW3": "",
		"VBPA_KUNNR3": "",
		"VBKD_BSARK": "CMX",
		"VBAK_BNAME": "",
		"VBAK_TELF1": "",
		"VBAK_SUBMI": "",
		"VBKD_IHREZ_E": "",
		"VBKD_BSTKD_E": "",
		"VBKD_BSTDK_E": "",
		"VBAK_KVGR1": "999",
		"VBAK_KVGR2": "",
		"KONV_KBETR": payload.monto,
		"TEXT_LINE_C001": payload.numero_pedido,
		"TEXT_LINE_C002": "",
		"TEXT_LINE_C003": "AjusteDIC1.5",
		"TEXT_LINE_C004": "",
		"TEXT_LINE_C005": "",
		"TEXT_LINE_C006": "",
		"TEXT_LINE_C007": "r.baez",
		"IM_T_SD_P_": [{
			"VBAP_POSNR": "000010",
			"VBAP_MATNR": "000000000003000727",
			"VBAP_ARKTX": "Servicios Logisticos",
			"VBAP_KDMAT": "",
			"VBAP_KWMENG": "1",
			"VBAP_VRKME": "",
			"TEXT_LINE_P001": "",
			"VBAP_WERKS": "6001",
			"VBKD_IHREZ": "",
			"VBAP_VOLUM": "",
			"VBKD_KDKG1": "01",
			"VBKD_SDABW": "0001",
			"VBAP_NTGEW": "",
			"KONP_KBETR": payload.monto,
			"COBL_PRCTR": payload.centro_beneficio,
			"VBEP_TDDAT": formatdate(now() >> toTimeZone("America/Mexico_City")),
			"VBEP_TDUHR": "000000",
			"VBEP_EDATU": formatdate(now() >> toTimeZone("America/Mexico_City")),
			"VBEP_EZEIT": "000000"
		}],
		"EX_RETURN": {
			"IM_SYSTEM": "",
			"PROCESS": "",
			"VBRK_VBELN": "",
			"VBAK_VBELN": "",
			"VBKD_BSTKD": "",
			"EXT_T_MENSAJE": [""]
		}
	}
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Call-client-system-sap" doc:id="395de966-497f-4075-9b7a-7cb547b3ff15" name="client-system-sap"/>
		</parallel-foreach>
		<ee:transform doc:name="Extract array" doc:id="91f18b6e-1249-4071-904f-e345ffaef0b7" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="provIngrAuxArrayExtract" ><![CDATA[%dw 2.0
output application/json
---
vars.provIngrAuxArray map((item)-> item.typedValue)]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
	</sub-flow>
	<sub-flow name="orchestrator-post-tms-shipments-sales-order-process-003" doc:id="d2cedf08-cba3-4d34-ab6d-aeda8aeb82d8" >
		<!-- [STUDIO:"For Each"]<foreach doc:name="For Each" doc:id="dced2f48-325e-40b7-8319-69f00360a86a" collection="#[vars.originalPayload.sap_info&#93;">
			<ee:transform doc:name="Set request sales order" doc:id="80372159-f58f-4260-9ea8-5cc4edd4ec65">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
import * from dw::util::Coercions
fun formatdate(d: DateTime) = d as String {
	format: "yyyyMMdd"
}
&#45;&#45;-
{
	"operation": "pedidoventa",
	"order": "1",
	"originalRequst": true,
	"sap_request": {
		"IM_SYSTEM": "0000000015",
		"PROCESS": "003", //001 provision ingreso y 003 para peido de venta (orden de venta), 002 actualizaciÃ³n de provisiÃ³n, 004 carta porte(pedido venta con factura), 06A sustituciÃ³n
		"SERIE": "",
		"VBAK_VKORG": "MD00",
		"VBAK_VTWEG": "10",
		"VBAK_SPART": "10",
		"VBAK_VKBUR": "MD00",
		"VBAK_VKGRP": "MD0",
		"VBAK_XBLNR": "",
		"KUAGV_KUNNR": payload.id_cliente,
		"VBKD_BSTKD": payload.numero_pedido,
		"VBKD_BSTDK": formatdate(now() >> toTimeZone("America/Mexico_City")),
		"VBKD_ZTERM": "N015",
		"VBAK_AUGRU": "C10",
		"VBAK_WAERK": payload.codigo_moneda,
		"VBAK_ABRVW": "N",
		"VBKD_BZIRK": "Z01001",
		"VBKD_KDKG1": "01",
		"VBKD_SDABW": "0001",
		"VBPA_PARVW1": "",
		"VBPA_KUNNR1": "",
		"VBPA_PARVW2": "",
		"VBPA_KUNNR2": "",
		"VBPA_PARVW3": "",
		"VBPA_KUNNR3": "",
		"VBKD_BSARK": "CMX",
		"VBAK_BNAME": "",
		"VBAK_TELF1": "",
		"VBAK_SUBMI": "",
		"VBKD_IHREZ_E": "",
		"VBKD_BSTKD_E": "",
		"VBKD_BSTDK_E": "",
		"VBAK_KVGR1": "999",
		"VBAK_KVGR2": "",
		"KONV_KBETR": payload.monto,
		"TEXT_LINE_C001": payload.numero_pedido,
		"TEXT_LINE_C002": "",
		"TEXT_LINE_C003": "AjusteDIC1.5",
		"TEXT_LINE_C004": "",
		"TEXT_LINE_C005": "",
		"TEXT_LINE_C006": "",
		"TEXT_LINE_C007": "r.baez",
		"IM_T_SD_P_": [{
			"VBAP_POSNR": "000010",
			"VBAP_MATNR": "000000000003000727",
			"VBAP_ARKTX": "Servicios Logisticos",
			"VBAP_KDMAT": "",
			"VBAP_KWMENG": "1",
			"VBAP_VRKME": "",
			"TEXT_LINE_P001": "",
			"VBAP_WERKS": "6001",
			"VBKD_IHREZ": "",
			"VBAP_VOLUM": "",
			"VBKD_KDKG1": "01",
			"VBKD_SDABW": "0001",
			"VBAP_NTGEW": "",
			"KONP_KBETR": payload.monto,
			"COBL_PRCTR": payload.centro_beneficio,
			"VBEP_TDDAT": formatdate(now() >> toTimeZone("America/Mexico_City")),
			"VBEP_TDUHR": "000000",
			"VBEP_EDATU": formatdate(now() >> toTimeZone("America/Mexico_City")),
			"VBEP_EZEIT": "000000"
		}&#93;,
		"EX_RETURN": {
			"IM_SYSTEM": "",
			"PROCESS": "",
			"VBRK_VBELN": "",
			"VBAK_VBELN": "",
			"VBKD_BSTKD": "",
			"EXT_T_MENSAJE": [""&#93;
		}
	}
}&#93;&#93;></ee:set-payload>
			</ee:message>
		</ee:transform>
			<flow-ref doc:name="Call-client-system-sap" doc:id="15024487-9a73-436b-814b-685ed0fe5ab4" name="client-system-sap" target="salOrdResp" />
			<ee:transform doc:name="Set auxiliar array variable" doc:id="15c3aaa6-36e7-4f12-8b9b-c88457815626" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="saleOrdrAuxArray" ><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
(vars.saleOrdrAuxArray default [&#93;) + vars.salOrdResp&#93;&#93;></ee:set-variable>
				</ee:variables>
			</ee:transform>
		</foreach> [STUDIO] -->
		<parallel-foreach doc:name="Parallel For Each" doc:id="4ae33415-b380-4c62-b845-c0300ffa63f3" collection="#[vars.originalPayload.sap_info]" target="saleOrdrAuxArray">
			<ee:transform doc:name="Set request sales order" doc:id="11cf2a44-bf35-4219-934a-f43b360af2bc" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/json
import * from dw::util::Coercions
fun formatdate(d: DateTime) = d as String {
	format: "yyyyMMdd"
}
---
{
	"operation": "pedidoventa",
	"order": "1",
	"originalRequst": true,
	"sap_request": {
		"IM_SYSTEM": "0000000015",
		"PROCESS": "003", //001 provision ingreso y 003 para peido de venta (orden de venta), 002 actualizaciÃ³n de provisiÃ³n, 004 carta porte(pedido venta con factura), 06A sustituciÃ³n
		"SERIE": "",
		"VBAK_VKORG": "MD00",
		"VBAK_VTWEG": "10",
		"VBAK_SPART": "10",
		"VBAK_VKBUR": "MD00",//3000710
		"VBAK_VKGRP": "MD0",//3000718
		"VBAK_XBLNR": "",
		"KUAGV_KUNNR": payload.id_cliente,
		"VBKD_BSTKD": payload.numero_pedido,
		"VBKD_BSTDK": formatdate(now() >> toTimeZone("America/Mexico_City")),
		"VBKD_ZTERM": "N015",
		"VBAK_AUGRU": "C10",
		"VBAK_WAERK": payload.codigo_moneda,
		"VBAK_ABRVW": "N",
		"VBKD_BZIRK": "Z01001",
		"VBKD_KDKG1": "01",
		"VBKD_SDABW": "0001",
		"VBPA_PARVW1": "",
		"VBPA_KUNNR1": "",
		"VBPA_PARVW2": "",
		"VBPA_KUNNR2": "",
		"VBPA_PARVW3": "",
		"VBPA_KUNNR3": "",
		"VBKD_BSARK": "CMX",
		"VBAK_BNAME": "",
		"VBAK_TELF1": "",
		"VBAK_SUBMI": "",
		"VBKD_IHREZ_E": "",
		"VBKD_BSTKD_E": "",
		"VBKD_BSTDK_E": "",
		"VBAK_KVGR1": "999",
		"VBAK_KVGR2": "",
		"KONV_KBETR": payload.monto,
		"TEXT_LINE_C001": payload.numero_pedido,
		"TEXT_LINE_C002": "",
		"TEXT_LINE_C003": "AjusteDIC1.5",
		"TEXT_LINE_C004": "",
		"TEXT_LINE_C005": "",
		"TEXT_LINE_C006": "",
		"TEXT_LINE_C007": "r.baez",
		"IM_T_SD_P_": [{
			"VBAP_POSNR": "000010",
			"VBAP_MATNR": "000000000003000727",
			"VBAP_ARKTX": "Servicios Logisticos",
			"VBAP_KDMAT": "",
			"VBAP_KWMENG": "1",
			"VBAP_VRKME": "",
			"TEXT_LINE_P001": "",
			"VBAP_WERKS": "6001",
			"VBKD_IHREZ": "",
			"VBAP_VOLUM": "",
			"VBKD_KDKG1": "01",
			"VBKD_SDABW": "0001",
			"VBAP_NTGEW": "",
			"KONP_KBETR": payload.monto,
			"COBL_PRCTR": payload.centro_beneficio,
			"VBEP_TDDAT": formatdate(now() >> toTimeZone("America/Mexico_City")),
			"VBEP_TDUHR": "000000",
			"VBEP_EDATU": formatdate(now() >> toTimeZone("America/Mexico_City")),
			"VBEP_EZEIT": "000000"
		}],
		"EX_RETURN": {
			"IM_SYSTEM": "",
			"PROCESS": "",
			"VBRK_VBELN": "",
			"VBAK_VBELN": "",
			"VBKD_BSTKD": "",
			"EXT_T_MENSAJE": [""]
		}
	}
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="Call-client-system-sap" doc:id="7b271895-f1c8-44f7-a0cb-dfa627c86e71" name="client-system-sap"/>
		</parallel-foreach>
		<ee:transform doc:name="Extract array" doc:id="bdb71bd6-52fd-4177-a0de-0952b20a6c90" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="saleOrdrAuxArrayExtract" ><![CDATA[%dw 2.0
output application/json
---
vars.saleOrdrAuxArray map((item)-> item.typedValue)]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
	</sub-flow>
	<sub-flow name="orchestrator-post-tms-shipments-bill-join-responses-provs-sales" doc:id="41de809b-6b01-4e4f-b0f7-678012290dee" >
		<ee:transform doc:name="Join arrays responses" doc:id="d940a616-7d7e-41d8-a3bb-181abd9c6ebf" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="joinArrays" ><![CDATA[%dw 2.0
output application/json
---
vars.provIngrAuxArrayExtract ++ vars.saleOrdrAuxArrayExtract]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
	</sub-flow>
	<sub-flow name="orchestrator-post-tms-shipments-bill-lading-set-response-sap-info" doc:id="53febab7-2c96-445d-ae26-7b110e46d15d" >
		<parallel-foreach doc:name="Parallel For Each" doc:id="d7c92de4-2f39-44ed-b715-508d16432e38" collection="#[vars.joinArrays]" target="respSapArray">
			<ee:transform doc:name="Transform Message" doc:id="11f7eb23-69ab-46c0-a3b3-d46e8e2ff037">
			<ee:message>
					<ee:set-payload ><![CDATA[%dw 2.0
output application/json
import * from dw::Runtime
---
{
	"identificador_pedido": payload.d.EX_RETURN.VBKD_BSTKD,
	"numero_factura_provision": if ( payload.d.EX_RETURN.PROCESS == "001" ) 
	payload.d.EX_RETURN.VBRK_VBELN
	else "",
	"numero_pedido_provision": if ( payload.d.EX_RETURN.PROCESS == "001" )
	payload.d.EX_RETURN.VBAK_VBELN
	else "",
	"numero_factura_venta": if ( payload.d.EX_RETURN.PROCESS == "003" )
	payload.d.EX_RETURN.VBRK_VBELN
	else "",
	"numero_pedido_venta": if ( payload.d.EX_RETURN.PROCESS == "003" )
	payload.d.EX_RETURN.VBAK_VBELN
	else "",
	"correlation_id": correlationId
} wait 60000]]></ee:set-payload>
			</ee:message>
			<ee:variables>
			</ee:variables>
		</ee:transform>
		</parallel-foreach>
		<ee:transform doc:name="Transform Message" doc:id="a40b6212-28c9-4cb1-b4bc-5463d3995468" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="respSapExtract" ><![CDATA[%dw 2.0
output application/json
---
vars.respSapArray map($.typedValue)]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="6ae96bba-b410-4899-8d10-02fcf31a8e43" message="#[vars.respSapArray]"/>
	</sub-flow>
	<sub-flow name="orchestrator-post-tms-shipments-bill-lading-update-response-sap-info" doc:id="aefb0455-fdf8-447e-bf0b-4f68277cf0bc" >
		<ee:transform doc:name="Set structure response" doc:id="b1a03dab-a2d7-4520-b671-11c7a245548f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
ns ns2 http://ws.edifactwstraxion/
---
{
	"traxion_response": {
		"completed_succesfully": true,
		"response": vars.respSapExtract,
		"response_pac": {
			"return": {
				"codigo": vars.cpResponse.body.ns2#generaComprobanteResponse.return.codigo,
				"descripcion": vars.cpResponse.body.ns2#generaComprobanteResponse.return.descripcion,
				"documentopdf": trim(vars.cpResponse.body.ns2#generaComprobanteResponse.return.documentopdf),
				"documentoxml": trim(vars.cpResponse.body.ns2#generaComprobanteResponse.return.documentoxml),
				"fechaTimbrado": vars.cpResponse.body.ns2#generaComprobanteResponse.return.fechaTimbrado,
				"noCertificado": vars.cpResponse.body.ns2#generaComprobanteResponse.return.noCertificado,
				"selloCFDI": trim(vars.cpResponse.body.ns2#generaComprobanteResponse.return.selloCFDI),
				"selloSAT": trim(vars.cpResponse.body.ns2#generaComprobanteResponse.return.selloSAT),
				"UUID": vars.cpResponse.body.ns2#generaComprobanteResponse.return.UUID
			}
		}
	}
}]]></ee:set-payload>
			</ee:message>
			<ee:variables >
			</ee:variables>
		</ee:transform>
		<!-- [STUDIO:"Transform Message"]<ee:transform doc:name="Transform Message" doc:id="ee36be66-bc84-48cc-9e32-635693e19485" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
vars.structureFinalResponse update{
	case .traxion_response.response -> vars.responseSapInfoExtract
}&#93;&#93;></ee:set-payload>
			</ee:message>
		</ee:transform> [STUDIO] -->
		<logger level="INFO" doc:name="Logger" doc:id="6969e81c-fbba-4133-bf5a-669b17ebac5d" message="#[payload]"/>
	</sub-flow>
</mule>
